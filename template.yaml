AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: QuotesApi SAM template

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        QUOTES_TABLE: !Ref QuotesTable

Resources:
  QuotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S

        -
          AttributeName: createdAt
          AttributeType: N

      KeySchema:
        -
          AttributeName: id
          KeyType: HASH

        -
          AttributeName: createdAt
          KeyType: RANGE

  LambdaExcecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        -
          PolicyName: LambdaDynamoDBAccessPolicy
          PolicyDocument:
            Statement:
              -
                Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:Scan"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                Resource:
                  - !GetAtt QuotesTable.Arn
                  - !Join [ '', [ !GetAtt QuotesTable.Arn, '/', '*' ] ]

  GetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_all/
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /
            Method: get

Outputs:
  QuotesApi:
    Description: "Base API URL in Prod Stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

